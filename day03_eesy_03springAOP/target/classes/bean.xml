<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        https://www.springframework.org/schema/aop/spring-aop.xsd">




<!--    service对象-->
    <bean id="accountServiceImpl" class="com.ssm.service.impl.AccountServiceImpl"></bean>

<!--    Spring中基于xml的AOP配置步骤
            1. 把通知Bean交给spring来管理
            2. 使用aop:config标签表明开始AOP的配置
            3. 使用aop:aspect标签表明配置切面
                id属性：给切面提供一个唯一标识
                ref属性：是指定通知类bean的id
            4. 在aop:aspct标签的内部使用对应标签来配置通知类型
                目标：让printLog()方法在切入点方法执行之前执行，故为前置通知
                使用aop:before：来配置，
                    method属性：用于指定Logger类中哪个方法是前置通知
                    pointcut属性：定义切入点
                        格式：execute(切入点表达式)
                        切入点表达式
                            修饰符 返回值 类全限定名.方法名
-->

    <bean id="logger" class="com.ssm.utils.Logger"></bean>

<!--2. 使用aop:config标签表明开始AOP的配置-->
    <aop:config>
        <!--3. 使用aop:aspect标签表明配置切面        -->
        <aop:aspect id="logAdvice" ref="logger">
            <aop:before method="printLog" pointcut="execution(public void com.ssm.service.impl.AccountServiceImpl.saveAccount())"></aop:before>
        </aop:aspect>
    </aop:config>


</beans>