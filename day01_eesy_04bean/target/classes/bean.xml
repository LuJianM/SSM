<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd">


    <!--把对象的创建交给spring来管理-->
    <!--<bean id="accountService" class="com.ssm.service.impl.AccountServiceImpl" ></bean>-->

    <!--<bean id="accuountDao" class="com.ssm.dao.impl.AccountDao"></bean>-->


    <!--使用普通工厂中的方法创建对象-->
    <!--<bean id="instanceFactory" class="com.ssm.factory.InstanceFactory"></bean>-->

    <!--<bean id="accountService" factory-bean="instanceFactory" factory-method="getAccountService"></bean>-->

    <!--&lt;!&ndash;使用工厂中的静态方法创建对象&ndash;&gt;-->
    <!--<bean id="accountService" class="com.ssm.factory.StaticFactory" factory-method="getAccountService"></bean>-->


    <!--bean的作用范围
        bean标签有一个scope属性：用于指定bean的作用范围。
        singleton：单例（默认）
        prototype：多例
        request ：
        session：
        global-session：
    -->
    <!--<bean id="accountService" class="com.ssm.service.impl.AccountServiceImpl" scope="prototype"></bean>-->

    <!--bean对象的生命周期
        单例对象：我与容器共生死！！！
            出生：
            或者
        多例对象：
    -->
    <bean id="accountService" class="com.ssm.service.impl.AccountServiceImpl" scope="singleton" init-method="init" destroy-method="destory"></bean>
</beans>